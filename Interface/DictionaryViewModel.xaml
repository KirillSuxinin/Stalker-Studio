<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Stalker_Studio"
                    xmlns:vm="clr-namespace:Stalker_Studio.ViewModel"
                    xmlns:cm="clr-namespace:Stalker_Studio.Common"
                    xmlns:av="http://icsharpcode.net/sharpdevelop/avalonedit"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:pt="http://propertytools.org/wpf">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="DictionaryCommands.xaml"/>
        <ResourceDictionary Source="DictionaryInterface.xaml"/>
        <ResourceDictionary Source="PropertyGrid\DictionaryPropertyGrid.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="DataTemplate_FileViewModel" DataType="{x:Type vm:FileViewModel}">
        <ContentPresenter Content="{Binding}"/>
    </DataTemplate>

    <DataTemplate x:Key="DataTemplate_TextFileViewModel" DataType="{x:Type vm:TextFileViewModel}">
        <av:TextEditor SyntaxHighlighting="LTX" 
                        Background="{DynamicResource brush_BackgroundContent}" 
                        ShowLineNumbers="True"
                        Document="{Binding Document}"/>
    </DataTemplate>

    <DataTemplate x:Key="dataTemplate_AnyHeader">
        <TextBlock x:Name="Header" Text="{Binding}"/>
    </DataTemplate>
    <DataTemplate x:Key="dataTemplate_FileModelHeader" DataType="{x:Type cm:FileModel}">
        <StackPanel Orientation="Horizontal">
            <TextBox x:Name="RenameableTextBox" Text="{Binding Name}" Margin="0,0" Style="{StaticResource style_RenameableTextBox}"
                     IsReadOnly="True"/>
            <TextBlock x:Name="Extension" Text="{Binding Extension}" Margin="0" Padding="0"/>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="dataTemplate_DirectoryModelHeader">
        <TextBox x:Name="RenameableTextBox" Text="{Binding Name}" Margin="0,0" Style="{StaticResource style_RenameableTextBox}"
                 IsReadOnly="True"/>
    </DataTemplate>

    <local:HeaderDataTemplateSelector x:Key="HeaderDataTemplateSelector" 
                                         FileModel="{StaticResource dataTemplate_FileModelHeader}"
                                         DirectoryModel="{StaticResource dataTemplate_DirectoryModelHeader}"
                                         Any="{StaticResource dataTemplate_AnyHeader}"/>

    <HierarchicalDataTemplate x:Key="DataTemplate_Hierarchical" ItemsSource="{Binding Nodes}">
        <StackPanel x:Name="Container" Orientation="Horizontal" Background="Transparent" ToolTip="{Binding FullName}"
                    Tag="{Binding}">
            <StackPanel.ContextMenu>
                <ContextMenu 
                    DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}"
                    local:Attached.CurrentViewModel ="{Binding Path=PlacementTarget.(local:Attached.CurrentViewModel), RelativeSource={RelativeSource Self}}"
                    local:Attached.PreviousViewModel ="{Binding Path=PlacementTarget.(local:Attached.PreviousViewModel), RelativeSource={RelativeSource Self}}"
                    ItemsSource="{Binding Path=PlacementTarget.(local:Attached.CurrentViewModel).ItemCommands, RelativeSource={RelativeSource Self}}"
                    ItemContainerStyleSelector="{StaticResource CommandStyleSelector}"/>
            </StackPanel.ContextMenu>
            <Image Source="{Binding Converter={StaticResource TreeNodeIconConverter}}"/>
            <ContentPresenter x:Name="HeaderPresenter" Margin="4,0"
                              Content="{Binding}" 
                              ContentTemplateSelector="{StaticResource HeaderDataTemplateSelector}"/>
            <ToggleButton x:Name="PinButton" Style="{StaticResource style_IconToggleButton}" Width="14" Height="14" Margin="6,0"
                        Visibility="Hidden"
                        Command="{Binding (local:Attached.CurrentViewModel).FixNodeCommand, RelativeSource={RelativeSource Self}}"
                        CommandParameter="{Binding}">
                <ToggleButton.Resources>
                    <local:DataContextSpy x:Key="Command" DataContext="{Binding Path=(local:Attached.CurrentViewModel).FixNodeCommand, ElementName=Container}"/>
                    <local:DataContextSpy x:Key="CommandParameter" DataContext="{Binding}"/>
                </ToggleButton.Resources>
                <ToggleButton.IsChecked>
                    <local:PathBinding
                        Command="{StaticResource Command}"
                        Converter="{StaticResource IsCheckedToggleButtonConverter}"
                        ConverterParameter="{StaticResource CommandParameter}"
                        Mode="OneWay"/>
                </ToggleButton.IsChecked>
                <Path x:Name="PinImage" Width="12" Height="12" Stretch="Uniform" Fill="{DynamicResource brush_Glyph-50}">
                    <Path.Data>
                        <PathGeometry Figures="M 128,17.475L 130.842,17.475L 130.842,2.91001L 130.842,0.608195L 130.842,0.000223796L 139.593,0.000223796L 145.003,0.000223796L 145.424,0.000223796L 145.424,17.475L 148.413,17.475L 148.413,20.3848L 139.684,20.3848L 139.684,32.0003L 136.752,32.0003L 136.752,20.3848L 128,20.3848L 128,17.475 Z M 133.774,2.91007L 133.774,17.475L 139.593,17.475L 139.593,2.91007L 133.774,2.91007 Z" />
                    </Path.Data>
                    <Path.LayoutTransform>
                        <RotateTransform Angle="90"/>
                    </Path.LayoutTransform>
                </Path>
            </ToggleButton>
        </StackPanel>
        <HierarchicalDataTemplate.Triggers>
            <Trigger SourceName="PinButton" Property="IsChecked" Value="True">
                <Setter TargetName="PinImage" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="0" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="PinButton" Property="Visibility" Value="Visible"/>
                <Setter TargetName="PinImage" Property="Fill" Value="{StaticResource brush_Focused}"/>
                <!--<Setter TargetName="Text" Property="FontWeight" Value="Bold"/>-->
            </Trigger>
            <Trigger SourceName="Container" Property="IsMouseOver"  Value="True">
                <Setter TargetName="PinButton" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger SourceName="PinButton" Property="IsEnabled"  Value="False">
                <Setter TargetName="PinButton" Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </HierarchicalDataTemplate.Triggers>
    </HierarchicalDataTemplate>

    <DataTemplate x:Key="DataTemplate_BrowserViewModel" DataType="{x:Type vm:BrowserViewModel}">
        <DockPanel local:Attached.CurrentViewModel="{Binding}" 
                   local:Attached.PreviousViewModel="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
            <ToolBar DockPanel.Dock="Top" ItemsSource="{Binding Commands}"
                     ItemTemplateSelector="{StaticResource CommandDataTemplateSelector}"/>
            <ComboBox DockPanel.Dock="Top" Text="{Binding Search, Mode=TwoWay}" IsEditable="True" ToolTip="Поиск"
                      ItemsSource="{Binding SearchHistory}"/>
            <TreeView BorderThickness="0" Name="ViewModelHost" local:Attached.This="{Binding RelativeSource={RelativeSource Self}, Mode=OneWay}"
                      Tag="{Binding}"
                      VirtualizingPanel.IsVirtualizing="True"
                        VirtualizingPanel.VirtualizationMode="Recycling">
                <TreeView.ContextMenu>
                    <ContextMenu 
                        DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}"
                        local:Attached.CurrentViewModel ="{Binding}"
                        local:Attached.PreviousViewModel ="{Binding Path=PlacementTarget.(local:Attached.PreviousViewModel), RelativeSource={RelativeSource Self}}"
                        ItemsSource="{Binding Commands}"
                        ItemContainerStyleSelector="{StaticResource CommandStyleSelector}"/>
                </TreeView.ContextMenu>
                <TreeViewItem x:Name="FixedsItem"
                              Visibility="{Binding FixedNodesGroupVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                              ItemTemplate="{StaticResource DataTemplate_Hierarchical}" 
                              ItemsSource="{Binding FixedNodes}"
                              ToolTip="Закрепленные объекты">
                    <TreeViewItem.Header>
                        <StackPanel Orientation="Horizontal" Background="Transparent" Margin="1,0">
                            <Image Source="{StaticResource icon_Favorite}" Margin="0,0"/>
                            <TextBlock Text="Избранное" Margin="4,0"/>
                        </StackPanel>
                    </TreeViewItem.Header>
                </TreeViewItem>
                <TreeViewItem x:Name="RootItem"
                              ItemTemplate="{StaticResource DataTemplate_Hierarchical}"
                              ItemsSource="{Binding Root.Nodes}"
                              ToolTip="{Binding Root.FullName}">
                    <TreeViewItem.Header>
                        <StackPanel Orientation="Horizontal" Background="Transparent" Margin="1,0">
                            <Image Source="{StaticResource icon_ProjectFolder}" Margin="0,0"/>
                            <TextBlock Text="{Binding Root}" Margin="4,0"/>
                        </StackPanel>
                    </TreeViewItem.Header>
                </TreeViewItem>
            </TreeView>
        </DockPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Root}" Value="{x:Null}">
                <Setter TargetName="RootItem" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding FixedNodes.Count}" Value="0">
                <Setter TargetName="FixedsItem" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="DataTemplate_HierarchicalViewModel" DataType="{x:Type vm:HierarchicalViewModel}">
        <DockPanel>
            <ToolBar DockPanel.Dock="Top" ItemsSource="{Binding Commands}"/>
            <ComboBox DockPanel.Dock="Top" Text="{Binding Search, Mode=TwoWay}" IsEditable="True" ItemsSource="{Binding SearchHistory}"/>
            <TreeView BorderThickness="0" ItemsSource="{Binding Nodes}">
                <TreeView.ContextMenu>
                    <ContextMenu ItemsSource="{Binding Commands}"/>
                </TreeView.ContextMenu>
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Nodes}">
                        <StackPanel x:Name="Container"  Orientation="Horizontal" Background="Transparent">
                            <Image Source="{Binding Converter={StaticResource TreeNodeIconConverter}}"/>
                            <TextBlock x:Name="Text" Text="{Binding}" Margin="6,0"/>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
        </DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="CategoryHeaderTemplate1">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <pt:Bitmap Source="{Binding Icon}"/>
            <TextBlock Grid.Column="1" Text="{Binding Header}" Margin="4 0 0 0" FontWeight="Bold"/>
        </Grid>
    </DataTemplate>

    <ControlTemplate x:Key="CategoryControlTemplate1"  TargetType="{x:Type HeaderedContentControl}">
        <Grid Margin="0 8 0 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            <Separator Grid.Column="1" Margin="4 3 0 0"/>
            <ContentPresenter Grid.Row="1" Grid.ColumnSpan="2"/>
        </Grid>
    </ControlTemplate>

    <DataTemplate x:Key="dataTemplate_PropertiesViewModel" DataType="{x:Type vm:PropertiesViewModel}">
        <!--<DockPanel>
            <ComboBox DockPanel.Dock="Top" Text="{Binding Source}" IsEditable="True" ItemsSource="{Binding SourceList}"/>-->
        
            <pt:PropertyGrid 
                VirtualizingPanel.IsVirtualizing="True"
                TabVisibility="Collapsed"       

                SelectedObject="{Binding Source}" 
                ControlFactory="{StaticResource CustomControlFactory}"
                Operator="{StaticResource CustomOperator}"
                CategoryControlType="Expander">
            </pt:PropertyGrid>
       
        <!--</DockPanel>-->
    </DataTemplate>

    <Style x:Key="style_LayoutItem" TargetType="{x:Type LayoutItem}"/>

    <Style x:Key="style_FileViewModelLayoutItem" TargetType="{x:Type LayoutItem}">
        <Setter Property="Title" Value="{Binding Model.Title}"/>
        <Setter Property="ToolTip" Value="{Binding Model.Title}"/>
        <!--<Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>-->
        <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
        <Setter Property="IsActive" Value="{Binding Model.IsActive}"/>
    </Style>

    <Style x:Key="style_TreeViewModelLayoutItem" TargetType="{x:Type LayoutItem}">
        <Setter Property="Title" Value="{Binding Model.Name}"/>
        <Setter Property="ToolTip" Value="{Binding Model.Name}"/>
        <!--<Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>-->
        <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
        <Setter Property="IsActive" Value="{Binding Model.IsActive}"/>
    </Style>

    <local:ViewModelDataTemplateSelector x:Key="ViewModelDataTemplateSelector" 
                                         File="{StaticResource DataTemplate_FileViewModel}"
                                         TextFile="{StaticResource DataTemplate_TextFileViewModel}"
                                         Hierarchical="{StaticResource DataTemplate_HierarchicalViewModel}"
                                         Browser="{StaticResource DataTemplate_BrowserViewModel}"
                                         PropertiesTool="{StaticResource dataTemplate_PropertiesViewModel}"/>

    <local:ViewModelStyleSelector x:Key="ViewModelStyleSelector"
                                  File="{StaticResource style_FileViewModelLayoutItem}"
                                  TextFile="{StaticResource style_FileViewModelLayoutItem}"
                                  Hierarchical="{StaticResource style_TreeViewModelLayoutItem}"
                                  Default="{StaticResource style_LayoutItem}"/>

</ResourceDictionary>