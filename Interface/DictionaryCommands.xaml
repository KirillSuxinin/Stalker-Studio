<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Stalker_Studio"
                    xmlns:vm="clr-namespace:Stalker_Studio.ViewModel">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="DictionaryInterface.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="style_CommandMenuItem" TargetType="MenuItem" BasedOn="{StaticResource style_MenuItemExtendedCommand}">
        <Setter Property="Command" Value="{Binding}"/>
        <Setter Property="CommandParameter" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType=MenuBase}}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="style_CommandCheckableMenuItem" TargetType="MenuItem" BasedOn="{StaticResource style_CommandMenuItem}">
        <Setter Property="IsCheckable" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <MenuItem x:Name="CurrentItem" DataContext="{Binding}" 
                              Command="{TemplateBinding Command}" 
                              CommandParameter="{TemplateBinding CommandParameter}"
                              IsCheckable="{TemplateBinding IsCheckable}"
                              Style="{StaticResource style_MenuItemExtendedCommand}">
                        <MenuItem.Resources>
                            <local:DataContextSpy x:Key="Command" DataContext="{Binding}"/>
                            <local:DataContextSpy x:Key="CommandParameter" DataContext="{Binding CommandParameter, ElementName=CurrentItem}"/>
                        </MenuItem.Resources>
                        <MenuItem.IsChecked>
                            <local:PathBinding
                                        Command="{StaticResource Command}"
                                        Converter="{StaticResource IsCheckedToggleButtonConverter}"
                                        ConverterParameter="{StaticResource CommandParameter}"
                                        Mode="OneWay"/>
                        </MenuItem.IsChecked>
                    </MenuItem>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="CurrentItem" Property="IsChecked" Value="True">
                            <Setter TargetName="CurrentItem" Property="Header" Value="{Binding ToggleOnText}"/>
                        </Trigger>
                        <Trigger SourceName="CurrentItem" Property="IsChecked" Value="False">
                            <Setter TargetName="CurrentItem" Property="Header" Value="{Binding ToggleOffText}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="style_CommandToggleButton" TargetType="ContentPresenter">

    </Style>

    <DataTemplate x:Key="dataTamplate_ToggleButton" DataType="{x:Type vm:ToggleRelayCommand}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Image Source="{Binding Icon}" Width="16" Height="16"/>
            <TextBlock x:Name="Text" Grid.Column="1" Text="{Binding Name}" Visibility="Collapsed"/>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToolBarPanel}}}" Value="{x:Null}">
                <Setter TargetName="Text" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="dataTamplate_ToolBarToggleButton" DataType="{x:Type vm:ToggleRelayCommand}">
        <ToggleButton x:Name="CurrentItem" ToolTip="{Binding ToolTip}" BorderThickness="0" Padding="4" Margin="1"
                      Command="{Binding}" 
                      CommandParameter="{Binding DataContext,RelativeSource={RelativeSource AncestorType=ToolBarPanel}}">
            <ToggleButton.Resources>
                <local:DataContextSpy x:Key="Command" DataContext="{Binding}"/>
                <local:DataContextSpy x:Key="CommandParameter" DataContext="{Binding CommandParameter, ElementName=CurrentItem}"/>
            </ToggleButton.Resources>
            <ToggleButton.IsChecked>
                <local:PathBinding
                            Command="{StaticResource Command}"
                            Converter="{StaticResource IsCheckedToggleButtonConverter}"
                            ConverterParameter="{StaticResource CommandParameter}"
                            Mode="OneWay"/>
            </ToggleButton.IsChecked>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Image Source="{Binding Icon}" Width="16" Height="16"/>
                <TextBlock x:Name="Text" Grid.Column="1" Text="{Binding Name}" Visibility="Collapsed"/>
            </Grid>
        </ToggleButton>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToolBarPanel}}}" Value="{x:Null}">
                <Setter TargetName="Text" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="dataTamplate_ToolBarButton" DataType="{x:Type vm:ExtendedRelayCommand}">
        <Button x:Name="CurrentItem" ToolTip="{Binding ToolTip}" BorderThickness="0" Padding="4" Margin="1"
                      Command="{Binding}" 
                      CommandParameter="{Binding DataContext, RelativeSource={RelativeSource AncestorType=ToolBarPanel}}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Image Source="{Binding Icon}" Width="16" Height="16"/>
                <TextBlock x:Name="Text" Grid.Column="1" Text="{Binding Name}" Visibility="Collapsed"/>
            </Grid>
        </Button>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToolBarPanel}}}" Value="{x:Null}">
                <Setter TargetName="Text" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <local:CommandDataTemplateSelector x:Key="CommandDataTemplateSelector"
                                       ToolBarButton="{StaticResource dataTamplate_ToolBarButton}"
                                       ToggleButton="{StaticResource dataTamplate_ToggleButton}"
                                       ToolBarToggleButton="{StaticResource dataTamplate_ToolBarToggleButton}"/>

    <local:CommandStyleSelector x:Key="CommandStyleSelector"
                                ToggleButton="{StaticResource style_CommandToggleButton}"
                                MenuItem="{StaticResource style_CommandMenuItem}"
                                CheckableMenuItem="{StaticResource style_CommandCheckableMenuItem}"/>
</ResourceDictionary>