<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Stalker_Studio"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:av="http://icsharpcode.net/sharpdevelop/avalonedit"
                    xmlns:avd="https://github.com/Dirkster99/AvalonDock">

    <Color x:Key="color_Background">#323130</Color>
    <Color x:Key="color_Glyph">#F4F4F4</Color>
    <Color x:Key="color_Border">#646464</Color>
    <Color x:Key="color_BackgroundContent">#282726</Color>
    <Color x:Key="color_Selection">#c17a40</Color>
    <Color x:Key="color_Focused">#ea971a</Color>
    <Color x:Key="color_Spot">#373635</Color>
    

    <SolidColorBrush x:Key="brush_Background" Color="{DynamicResource color_Background}"/>
    <SolidColorBrush x:Key="brush_Glyph" Color="{DynamicResource color_Glyph}"/>
    <SolidColorBrush x:Key="brush_Border" Color="{DynamicResource color_Border}"/>
    <SolidColorBrush x:Key="brush_BackgroundContent" Color="{DynamicResource color_BackgroundContent}"/>
    <SolidColorBrush x:Key="brush_Selection" Color="{DynamicResource color_Selection}"/>
    <SolidColorBrush x:Key="brush_Focused" Color="{DynamicResource color_Focused}"/>
    <SolidColorBrush x:Key="brush_Spot" Color="{DynamicResource color_BackgroundContent}"/>


    <Style TargetType="{x:Type Control}" x:Key="style_Common">
        <Setter Property="Control.Foreground" Value="{DynamicResource brush_Glyph}"/>
        <Setter Property="Control.Background" Value="{DynamicResource brush_Background}"/>
        <Setter Property="Control.BorderBrush" Value="{DynamicResource brush_Border}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="2"/>
        <!--<Setter Property="Margin" Value="1"/>-->
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Effect" Value="{x:Null}"/>
        <Setter Property="RenderOptions.BitmapScalingMode" Value="Fant"/>
    </Style>

    <Style TargetType="Grid">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="RenderOptions.BitmapScalingMode" Value="Fant"/>
        <!--<Setter Property="Margin" Value="0"/>-->
    </Style>

    <Style TargetType="GridSplitter">
        <Setter Property="RenderOptions.BitmapScalingMode" Value="Fant"/>
        <Setter Property="Background" Value="{DynamicResource brush_Background}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource brush_Border}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Background" Value="{DynamicResource brush_Selection}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Border" >
        <!--<Setter Property="BorderBrush" Value="#FF414141"/>-->
        <Setter Property="BorderBrush" Value="{DynamicResource brush_Border}"/>
        <Setter Property="RenderOptions.BitmapScalingMode" Value="Fant"/>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="Control.Foreground" Value="{DynamicResource brush_Glyph}"/>  
    </Style>

    <Style x:Key="style_Window" TargetType="{x:Type Window}" BasedOn="{StaticResource style_Common}">
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome ResizeBorderThickness="2" CaptionHeight="26" GlassFrameThickness="0" CornerRadius="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="0"/>
        <!--<Setter Property="Margin" Value="0"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border Margin="5" Padding="{TemplateBinding Padding}" BorderThickness="1" Background="{TemplateBinding Background}" BorderBrush="{StaticResource brush_Border}">
                        <Grid Background="Transparent">
                            <!-- Title bar -->
                            <Grid VerticalAlignment="Top">
                                <!-- Window title -->
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                                    <TextBlock Margin="10,0" FontWeight="Bold" Text="{TemplateBinding Title}"/>
                                    <TextBlock Margin="10,0" Text="{TemplateBinding ToolTip}"/>
                                </StackPanel>

                                <!-- Window control buttons stack -->
                                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                    <!-- Close button, for example -->
                                    <Button x:Name="ButtonMin" Margin="0" Command="{x:Static SystemCommands.MinimizeWindowCommand}" Background="Transparent" Width="38" Height="26" BorderThickness="0" WindowChrome.IsHitTestVisibleInChrome="True">
                                        <Path Data="M0,6 L12,6" Stroke="{StaticResource brush_Glyph}" StrokeThickness="1"/>
                                    </Button>
                                    <Button x:Name="ButtonMax" Margin="0" Command="{x:Static SystemCommands.MaximizeWindowCommand}" Background="Transparent" Width="38" Height="26"  BorderThickness="0" WindowChrome.IsHitTestVisibleInChrome="True">
                                        <Path Data="M0,0 L11,0 M11,0 L11,11 M11,11 L0,11 M0,11 L0,0" Stroke="{StaticResource brush_Glyph}" StrokeThickness="1"/>
                                    </Button>
                                    <Button x:Name="ButtonNorm" Margin="0" Command="{x:Static SystemCommands.MaximizeWindowCommand}" Background="Transparent" Width="38" Height="26"  BorderThickness="0" WindowChrome.IsHitTestVisibleInChrome="True">
                                        <Path Data="M0,0 L8,0 M8,0 L8,8 M8,8 L0,8 M0,8 L0,0" Stroke="{StaticResource brush_Glyph}" StrokeThickness="1" SnapsToDevicePixels="True"/>
                                    </Button>
                                    <Button Command="{x:Static SystemCommands.CloseWindowCommand}" Margin="0" Background="Transparent" Width="38" Height="26" BorderThickness="0" WindowChrome.IsHitTestVisibleInChrome="True">
                                        <Path Data="M0,0 L12,12 M0,12 L12,0" Stroke="{StaticResource brush_Glyph}" StrokeThickness="1"/>
                                    </Button>
                                </StackPanel>
                            </Grid>
                            <!-- Window content -->
                            <AdornerDecorator Margin="2,0,2,2">
                                <ContentPresenter Margin="0,30,0,0"/>
                            </AdornerDecorator>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="ButtonMax" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ButtonNorm" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="ButtonMax" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ButtonNorm" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter TargetName="ButtonMax" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ButtonNorm" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ButtonMin" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter Property="Padding" Value="7"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Label" BasedOn="{StaticResource style_Common}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource style_Common}">
        <Setter Property="Background" Value="{DynamicResource brush_BackgroundContent}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource brush_Focused}"/>
        <Setter Property="SelectionOpacity" Value="0.3"/>
        <Setter Property="BorderBrush" Value="{DynamicResource brush_Border}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBoxBase">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" Padding="0,2" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource brush_Selection}"/>
                        </Trigger>
                        <Trigger  Property="IsFocused" Value="True">
                            <Setter TargetName="border"  Property="BorderBrush" Value="{DynamicResource brush_Focused}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="style_Button" TargetType="ButtonBase" BasedOn="{StaticResource style_Common}">
        <Setter Property="Background" Value="{DynamicResource brush_BackgroundContent}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource brush_Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,1,8,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}">
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"  Background="Transparent"  Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource brush_Selection}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource brush_Focused}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource brush_Focused}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource style_Button}"/>

    <Style TargetType="CheckBox" BasedOn="{StaticResource style_Common}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent" SnapsToDevicePixels="True">
                        <BulletDecorator.Bullet>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Width="16"
                                    Height="16"
                                    CornerRadius="0"
                                    BorderThickness="1"
                                    SnapsToDevicePixels="True">
                                <Grid>
                                    <Path Visibility="Collapsed"
                                      Width="8"
                                      Height="8"
                                      x:Name="CheckMark"
                                      SnapsToDevicePixels="False"
                                      StrokeThickness="2"
                                      Stroke="{DynamicResource brush_Glyph}"
                                      Data="M 0 0 L 7 7 M 0 7 L 7 0">
                                    </Path>
                                    <Path Visibility="Collapsed"
                                        Width="8"
                                        Height="8"
                                        x:Name="InderminateMark"
                                        SnapsToDevicePixels="False"
                                        StrokeThickness="2"
                                        Stroke="{DynamicResource brush_Glyph}"
                                        Data="M 0 7 L 7 0">
                                    </Path>
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="8,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource brush_Selection}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{DynamicResource brush_Selection}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource brush_Focused}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Visibility" TargetName="CheckMark" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="CheckMark" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="InderminateMark" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="HeaderedContentControl" BasedOn="{StaticResource style_Common}">
        <Setter Property="Margin" Value="0,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="HeaderedContentControl">
                    <BulletDecorator>
                        <BulletDecorator.Bullet>
                            <StackPanel Orientation="Horizontal">
                                <Label Margin="0" Padding="2,2,0,2" Content="{TemplateBinding Header}"/>
                                <Label Margin="0,0,2,0" Padding="2,2,2,2" Content=":"/>
                            </StackPanel>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="Center"/>
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ProgressBar" BasedOn="{StaticResource style_Common}">
        <Setter Property="Background" Value="{DynamicResource brush_BackgroundContent}"/>
    </Style>

    <Style TargetType="{x:Type av:TextEditor}" BasedOn="{StaticResource style_Common}"/>

</ResourceDictionary>